# syntax = docker/dockerfile:1

############################
# STEP 1 build executable binary
############################
FROM golang:1.25-bookworm

# Install IntelÂ® oneAPI Toolkits

RUN apt update && apt install -y wget gnupg2 git

RUN wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
    | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null

RUN echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list

RUN apt update && apt install -y intel-oneapi-base-toolkit

# Build Gorse

WORKDIR /src

COPY go.* ./

RUN go mod download

COPY . ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    . /opt/intel/oneapi/setvars.sh && \
    cd cmd/gorse-server && \
    go build -tags mkl -ldflags=" \
       -X 'github.com/gorse-io/gorse/cmd/version.Version=$(git describe --tags $(git rev-parse HEAD))' \
       -X 'github.com/gorse-io/gorse/cmd/version.GitCommit=$(git rev-parse HEAD)' \
       -X 'github.com/gorse-io/gorse/cmd/version.BuildTime=$(date)'" .

############################
# STEP 2 build runtime image
############################
FROM debian:bookworm-slim

COPY --from=0 /src/cmd/gorse-server/gorse-server /usr/bin/gorse-server

RUN /usr/bin/gorse-server --version

ENV USER root

ENTRYPOINT ["/usr/bin/gorse-server"]
