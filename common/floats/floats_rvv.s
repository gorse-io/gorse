//go:build !noasm && riscv64
// Code generated by GoAT. DO NOT EDIT.
// versions:
// 	clang   18.1.8 (11bb4)
// 	objdump 2.42
// flags: -march=rv64imafdv -O3
// source: src/floats_rvv.c

TEXT ·vmul_const_add_to(SB), $0-40
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  dst+24(FP), A3
	MOV  n+32(FP), A4
	BLEZ A4, LBB0_8
	WORD $0xc2202873    // csrr	a6, vlenb
	WORD $0x00185793    // srli	a5, a6, 1
	WORD $0x01800893    // li	a7, 24
	BLTU A7, A5, LBB0_3
	WORD $0x01800793    // li	a5, 24

LBB0_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A4, A5, LBB0_9
	WORD $0x00000793    // li	a5, 0

LBB0_5:
	WORD $0x00279813 // slli	a6, a5, 2
	WORD $0x010686b3 // add	a3, a3, a6
	WORD $0x01060633 // add	a2, a2, a6
	WORD $0x01050533 // add	a0, a0, a6
	WORD $0x40f70733 // sub	a4, a4, a5

LBB0_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x00062687 // flw	fa3, 0(a2)
	WORD $0x68e7f7c3 // fmadd.s	fa5, fa5, fa4, fa3
	WORD $0x00f6a027 // fsw	fa5, 0(a3)
	WORD $0x00468693 // addi	a3, a3, 4
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0xfff70713 // addi	a4, a4, -1
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A4, LBB0_6

LBB0_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB0_8:
	RET

LBB0_9:
	WORD $0x00271293 // slli	t0, a4, 2
	WORD $0x005688b3 // add	a7, a3, t0
	WORD $0x005507b3 // add	a5, a0, t0
	WORD $0x00f6b7b3 // sltu	a5, a3, a5
	WORD $0x01153333 // sltu	t1, a0, a7
	WORD $0x0067f333 // and	t1, a5, t1
	WORD $0x00000793 // li	a5, 0
	BNEZ T1, LBB0_5
	WORD $0x00458313 // addi	t1, a1, 4
	WORD $0x0066b333 // sltu	t1, a3, t1
	WORD $0x0115b3b3 // sltu	t2, a1, a7
	WORD $0x00737333 // and	t1, t1, t2
	BNEZ T1, LBB0_5
	WORD $0x005602b3 // add	t0, a2, t0
	WORD $0x0056b2b3 // sltu	t0, a3, t0
	WORD $0x011638b3 // sltu	a7, a2, a7
	WORD $0x0112f8b3 // and	a7, t0, a7
	BNEZ A7, LBB0_5
	WORD $0x00185893 // srli	a7, a6, 1
	WORD $0x0d1077d7 // vsetvli	a5, zero, e32, m2, ta, ma
	WORD $0x0a05e407 // vlse32.v	v8, (a1), zero
	WORD $0x411007b3 // neg	a5, a7
	WORD $0x00e7f7b3 // and	a5, a5, a4
	WORD $0x00181813 // slli	a6, a6, 1
	WORD $0x00078293 // mv	t0, a5
	WORD $0x00068313 // mv	t1, a3
	WORD $0x00060393 // mv	t2, a2
	WORD $0x00050e13 // mv	t3, a0

LBB0_13:
	WORD $0x228e6507    // vl2re32.v	v10, (t3)
	WORD $0x2283e607    // vl2re32.v	v12, (t2)
	WORD $0xb2a41657    // vfmacc.vv	v12, v8, v10
	WORD $0x22830627    // vs2r.v	v12, (t1)
	WORD $0x010e0e33    // add	t3, t3, a6
	WORD $0x010383b3    // add	t2, t2, a6
	WORD $0x411282b3    // sub	t0, t0, a7
	WORD $0x01030333    // add	t1, t1, a6
	BNEZ T0, LBB0_13
	BNE  A5, A4, LBB0_5
	JMP  LBB0_7

TEXT ·vmul_const_add(SB), $0-32
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  n+24(FP), A3
	BLEZ A3, LBB1_8
	WORD $0xc22027f3    // csrr	a5, vlenb
	WORD $0x0017d713    // srli	a4, a5, 1
	WORD $0x01000813    // li	a6, 16
	BLTU A6, A4, LBB1_3
	WORD $0x01000713    // li	a4, 16

LBB1_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A3, A4, LBB1_9
	WORD $0x00000713    // li	a4, 0

LBB1_5:
	WORD $0x00271793 // slli	a5, a4, 2
	WORD $0x00f60633 // add	a2, a2, a5
	WORD $0x00f50533 // add	a0, a0, a5
	WORD $0x40e686b3 // sub	a3, a3, a4

LBB1_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x00062687 // flw	fa3, 0(a2)
	WORD $0x68e7f7c3 // fmadd.s	fa5, fa5, fa4, fa3
	WORD $0x00f62027 // fsw	fa5, 0(a2)
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0xfff68693 // addi	a3, a3, -1
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A3, LBB1_6

LBB1_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB1_8:
	RET

LBB1_9:
	WORD $0x00269713 // slli	a4, a3, 2
	WORD $0x00e60833 // add	a6, a2, a4
	WORD $0x00e50733 // add	a4, a0, a4
	WORD $0x00e63733 // sltu	a4, a2, a4
	WORD $0x010538b3 // sltu	a7, a0, a6
	WORD $0x011778b3 // and	a7, a4, a7
	WORD $0x00000713 // li	a4, 0
	BNEZ A7, LBB1_5
	WORD $0x00458893 // addi	a7, a1, 4
	WORD $0x011638b3 // sltu	a7, a2, a7
	WORD $0x0105b833 // sltu	a6, a1, a6
	WORD $0x0108f833 // and	a6, a7, a6
	BNEZ A6, LBB1_5
	WORD $0x0017d813 // srli	a6, a5, 1
	WORD $0x0d107757 // vsetvli	a4, zero, e32, m2, ta, ma
	WORD $0x0a05e407 // vlse32.v	v8, (a1), zero
	WORD $0x41000733 // neg	a4, a6
	WORD $0x00d77733 // and	a4, a4, a3
	WORD $0x00179793 // slli	a5, a5, 1
	WORD $0x00070893 // mv	a7, a4
	WORD $0x00060293 // mv	t0, a2
	WORD $0x00050313 // mv	t1, a0

LBB1_12:
	WORD $0x22836507    // vl2re32.v	v10, (t1)
	WORD $0x2282e607    // vl2re32.v	v12, (t0)
	WORD $0xb2a41657    // vfmacc.vv	v12, v8, v10
	WORD $0x22828627    // vs2r.v	v12, (t0)
	WORD $0x00f30333    // add	t1, t1, a5
	WORD $0x410888b3    // sub	a7, a7, a6
	WORD $0x00f282b3    // add	t0, t0, a5
	BNEZ A7, LBB1_12
	BNE  A4, A3, LBB1_5
	JMP  LBB1_7

TEXT ·vmul_const_to(SB), $0-32
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  n+24(FP), A3
	BLEZ A3, LBB2_8
	WORD $0xc22027f3    // csrr	a5, vlenb
	WORD $0x0017d713    // srli	a4, a5, 1
	WORD $0x01000813    // li	a6, 16
	BLTU A6, A4, LBB2_3
	WORD $0x01000713    // li	a4, 16

LBB2_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A3, A4, LBB2_9
	WORD $0x00000713    // li	a4, 0

LBB2_5:
	WORD $0x00271793 // slli	a5, a4, 2
	WORD $0x00f60633 // add	a2, a2, a5
	WORD $0x00f50533 // add	a0, a0, a5
	WORD $0x40e686b3 // sub	a3, a3, a4

LBB2_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x10e7f7d3 // fmul.s	fa5, fa5, fa4
	WORD $0x00f62027 // fsw	fa5, 0(a2)
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0xfff68693 // addi	a3, a3, -1
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A3, LBB2_6

LBB2_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB2_8:
	RET

LBB2_9:
	WORD $0x00269713 // slli	a4, a3, 2
	WORD $0x00e60833 // add	a6, a2, a4
	WORD $0x00e50733 // add	a4, a0, a4
	WORD $0x00e63733 // sltu	a4, a2, a4
	WORD $0x010538b3 // sltu	a7, a0, a6
	WORD $0x011778b3 // and	a7, a4, a7
	WORD $0x00000713 // li	a4, 0
	BNEZ A7, LBB2_5
	WORD $0x00458893 // addi	a7, a1, 4
	WORD $0x011638b3 // sltu	a7, a2, a7
	WORD $0x0105b833 // sltu	a6, a1, a6
	WORD $0x0108f833 // and	a6, a7, a6
	BNEZ A6, LBB2_5
	WORD $0x0017d813 // srli	a6, a5, 1
	WORD $0x41000733 // neg	a4, a6
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00d77733 // and	a4, a4, a3
	WORD $0x00179793 // slli	a5, a5, 1
	WORD $0x0d1078d7 // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x00070893 // mv	a7, a4
	WORD $0x00060293 // mv	t0, a2
	WORD $0x00050313 // mv	t1, a0

LBB2_12:
	WORD $0x22836407    // vl2re32.v	v8, (t1)
	WORD $0x9287d457    // vfmul.vf	v8, v8, fa5
	WORD $0x22828427    // vs2r.v	v8, (t0)
	WORD $0x00f30333    // add	t1, t1, a5
	WORD $0x410888b3    // sub	a7, a7, a6
	WORD $0x00f282b3    // add	t0, t0, a5
	BNEZ A7, LBB2_12
	BNE  A4, A3, LBB2_5
	JMP  LBB2_7

TEXT ·vmul_const(SB), $0-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	BLEZ A2, LBB3_10
	WORD $0xc2202773    // csrr	a4, vlenb
	WORD $0x00175693    // srli	a3, a4, 1
	WORD $0x00800793    // li	a5, 8
	BLTU A5, A3, LBB3_3
	WORD $0x00800693    // li	a3, 8

LBB3_3:
	WORD $0xff010113     // addi	sp, sp, -16
	WORD $0x00113423     // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023     // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413     // addi	s0, sp, 16
	WORD $0xff017113     // andi	sp, sp, -16
	BLTU A2, A3, LBB3_6
	WORD $0x00458693     // addi	a3, a1, 4
	BGEU A0, A3, LBB3_11
	WORD $0x00261693     // slli	a3, a2, 2
	WORD $0x00d506b3     // add	a3, a0, a3
	BGEU A1, A3, LBB3_11

LBB3_6:
	WORD $0x00000693 // li	a3, 0

LBB3_7:
	WORD $0x00269713 // slli	a4, a3, 2
	WORD $0x00e50533 // add	a0, a0, a4
	WORD $0x40d60633 // sub	a2, a2, a3

LBB3_8:
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00052707 // flw	fa4, 0(a0)
	WORD $0x10e7f7d3 // fmul.s	fa5, fa5, fa4
	WORD $0x00f52027 // fsw	fa5, 0(a0)
	WORD $0xfff60613 // addi	a2, a2, -1
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A2, LBB3_8

LBB3_9:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB3_10:
	RET

LBB3_11:
	WORD $0x00175793 // srli	a5, a4, 1
	WORD $0x40f006b3 // neg	a3, a5
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00c6f6b3 // and	a3, a3, a2
	WORD $0x00171713 // slli	a4, a4, 1
	WORD $0x0d107857 // vsetvli	a6, zero, e32, m2, ta, ma
	WORD $0x00068813 // mv	a6, a3
	WORD $0x00050893 // mv	a7, a0

LBB3_12:
	WORD $0x2288e407    // vl2re32.v	v8, (a7)
	WORD $0x9287d457    // vfmul.vf	v8, v8, fa5
	WORD $0x22888427    // vs2r.v	v8, (a7)
	WORD $0x40f80833    // sub	a6, a6, a5
	WORD $0x00e888b3    // add	a7, a7, a4
	BNEZ A6, LBB3_12
	BEQ  A3, A2, LBB3_9
	JMP  LBB3_7

TEXT ·vadd_const(SB), $0-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	BLEZ A2, LBB4_10
	WORD $0xc2202773    // csrr	a4, vlenb
	WORD $0x00175693    // srli	a3, a4, 1
	WORD $0x00800793    // li	a5, 8
	BLTU A5, A3, LBB4_3
	WORD $0x00800693    // li	a3, 8

LBB4_3:
	WORD $0xff010113     // addi	sp, sp, -16
	WORD $0x00113423     // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023     // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413     // addi	s0, sp, 16
	WORD $0xff017113     // andi	sp, sp, -16
	BLTU A2, A3, LBB4_6
	WORD $0x00458693     // addi	a3, a1, 4
	BGEU A0, A3, LBB4_11
	WORD $0x00261693     // slli	a3, a2, 2
	WORD $0x00d506b3     // add	a3, a0, a3
	BGEU A1, A3, LBB4_11

LBB4_6:
	WORD $0x00000693 // li	a3, 0

LBB4_7:
	WORD $0x00269713 // slli	a4, a3, 2
	WORD $0x00e50533 // add	a0, a0, a4
	WORD $0x40d60633 // sub	a2, a2, a3

LBB4_8:
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00052707 // flw	fa4, 0(a0)
	WORD $0x00e7f7d3 // fadd.s	fa5, fa5, fa4
	WORD $0x00f52027 // fsw	fa5, 0(a0)
	WORD $0xfff60613 // addi	a2, a2, -1
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A2, LBB4_8

LBB4_9:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB4_10:
	RET

LBB4_11:
	WORD $0x00175793 // srli	a5, a4, 1
	WORD $0x40f006b3 // neg	a3, a5
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00c6f6b3 // and	a3, a3, a2
	WORD $0x00171713 // slli	a4, a4, 1
	WORD $0x0d107857 // vsetvli	a6, zero, e32, m2, ta, ma
	WORD $0x00068813 // mv	a6, a3
	WORD $0x00050893 // mv	a7, a0

LBB4_12:
	WORD $0x2288e407    // vl2re32.v	v8, (a7)
	WORD $0x0287d457    // vfadd.vf	v8, v8, fa5
	WORD $0x22888427    // vs2r.v	v8, (a7)
	WORD $0x40f80833    // sub	a6, a6, a5
	WORD $0x00e888b3    // add	a7, a7, a4
	BNEZ A6, LBB4_12
	BEQ  A3, A2, LBB4_9
	JMP  LBB4_7

TEXT ·vsub_to(SB), $0-32
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  n+24(FP), A3
	BLEZ A3, LBB5_8
	WORD $0xc2202873    // csrr	a6, vlenb
	WORD $0x00185713    // srli	a4, a6, 1
	WORD $0x01000793    // li	a5, 16
	BLTU A5, A4, LBB5_3
	WORD $0x01000713    // li	a4, 16

LBB5_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A3, A4, LBB5_9
	WORD $0x00000713    // li	a4, 0

LBB5_5:
	WORD $0x40e686b3 // sub	a3, a3, a4
	WORD $0x00271713 // slli	a4, a4, 2
	WORD $0x00e60633 // add	a2, a2, a4
	WORD $0x00e585b3 // add	a1, a1, a4
	WORD $0x00e50533 // add	a0, a0, a4

LBB5_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x08e7f7d3 // fsub.s	fa5, fa5, fa4
	WORD $0x00f62027 // fsw	fa5, 0(a2)
	WORD $0xfff68693 // addi	a3, a3, -1
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0x00458593 // addi	a1, a1, 4
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A3, LBB5_6

LBB5_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB5_8:
	RET

LBB5_9:
	WORD $0x00181793    // slli	a5, a6, 1
	WORD $0x40a608b3    // sub	a7, a2, a0
	WORD $0x00000713    // li	a4, 0
	BLTU A7, A5, LBB5_5
	WORD $0x40b608b3    // sub	a7, a2, a1
	BLTU A7, A5, LBB5_5
	WORD $0x00185813    // srli	a6, a6, 1
	WORD $0x41000733    // neg	a4, a6
	WORD $0x00d77733    // and	a4, a4, a3
	WORD $0x0d1078d7    // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x00070893    // mv	a7, a4
	WORD $0x00060293    // mv	t0, a2
	WORD $0x00058313    // mv	t1, a1
	WORD $0x00050393    // mv	t2, a0

LBB5_12:
	WORD $0x2283e407    // vl2re32.v	v8, (t2)
	WORD $0x22836507    // vl2re32.v	v10, (t1)
	WORD $0x0a851457    // vfsub.vv	v8, v8, v10
	WORD $0x22828427    // vs2r.v	v8, (t0)
	WORD $0x00f383b3    // add	t2, t2, a5
	WORD $0x00f30333    // add	t1, t1, a5
	WORD $0x410888b3    // sub	a7, a7, a6
	WORD $0x00f282b3    // add	t0, t0, a5
	BNEZ A7, LBB5_12
	BNE  A4, A3, LBB5_5
	JMP  LBB5_7

TEXT ·vsub(SB), $0-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	BLEZ A2, LBB6_10
	WORD $0xc22027f3    // csrr	a5, vlenb
	WORD $0x0017d693    // srli	a3, a5, 1
	WORD $0x01000713    // li	a4, 16
	BLTU A4, A3, LBB6_3
	WORD $0x01000693    // li	a3, 16

LBB6_3:
	WORD $0xff010113     // addi	sp, sp, -16
	WORD $0x00113423     // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023     // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413     // addi	s0, sp, 16
	WORD $0xff017113     // andi	sp, sp, -16
	BLTU A2, A3, LBB6_6
	WORD $0x00261693     // slli	a3, a2, 2
	WORD $0x00d58733     // add	a4, a1, a3
	BGEU A0, A4, LBB6_11
	WORD $0x00d506b3     // add	a3, a0, a3
	BGEU A1, A3, LBB6_11

LBB6_6:
	WORD $0x00000693 // li	a3, 0

LBB6_7:
	WORD $0x40d60633 // sub	a2, a2, a3
	WORD $0x00269693 // slli	a3, a3, 2
	WORD $0x00d50533 // add	a0, a0, a3
	WORD $0x00d585b3 // add	a1, a1, a3

LBB6_8:
	WORD $0x0005a787 // flw	fa5, 0(a1)
	WORD $0x00052707 // flw	fa4, 0(a0)
	WORD $0x08f777d3 // fsub.s	fa5, fa4, fa5
	WORD $0x00f52027 // fsw	fa5, 0(a0)
	WORD $0xfff60613 // addi	a2, a2, -1
	WORD $0x00450513 // addi	a0, a0, 4
	WORD $0x00458593 // addi	a1, a1, 4
	BNEZ A2, LBB6_8

LBB6_9:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB6_10:
	RET

LBB6_11:
	WORD $0x0017d713 // srli	a4, a5, 1
	WORD $0x40e006b3 // neg	a3, a4
	WORD $0x00c6f6b3 // and	a3, a3, a2
	WORD $0x00179793 // slli	a5, a5, 1
	WORD $0x0d107857 // vsetvli	a6, zero, e32, m2, ta, ma
	WORD $0x00068813 // mv	a6, a3
	WORD $0x00050893 // mv	a7, a0
	WORD $0x00058293 // mv	t0, a1

LBB6_12:
	WORD $0x2282e407    // vl2re32.v	v8, (t0)
	WORD $0x2288e507    // vl2re32.v	v10, (a7)
	WORD $0x0aa41457    // vfsub.vv	v8, v10, v8
	WORD $0x22888427    // vs2r.v	v8, (a7)
	WORD $0x00f282b3    // add	t0, t0, a5
	WORD $0x40e80833    // sub	a6, a6, a4
	WORD $0x00f888b3    // add	a7, a7, a5
	BNEZ A6, LBB6_12
	BEQ  A3, A2, LBB6_9
	JMP  LBB6_7

TEXT ·vmul_to(SB), $0-32
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  n+24(FP), A3
	BLEZ A3, LBB7_8
	WORD $0xc2202873    // csrr	a6, vlenb
	WORD $0x00185713    // srli	a4, a6, 1
	WORD $0x01000793    // li	a5, 16
	BLTU A5, A4, LBB7_3
	WORD $0x01000713    // li	a4, 16

LBB7_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A3, A4, LBB7_9
	WORD $0x00000713    // li	a4, 0

LBB7_5:
	WORD $0x40e686b3 // sub	a3, a3, a4
	WORD $0x00271713 // slli	a4, a4, 2
	WORD $0x00e60633 // add	a2, a2, a4
	WORD $0x00e585b3 // add	a1, a1, a4
	WORD $0x00e50533 // add	a0, a0, a4

LBB7_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x10e7f7d3 // fmul.s	fa5, fa5, fa4
	WORD $0x00f62027 // fsw	fa5, 0(a2)
	WORD $0xfff68693 // addi	a3, a3, -1
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0x00458593 // addi	a1, a1, 4
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A3, LBB7_6

LBB7_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB7_8:
	RET

LBB7_9:
	WORD $0x00181793    // slli	a5, a6, 1
	WORD $0x40a608b3    // sub	a7, a2, a0
	WORD $0x00000713    // li	a4, 0
	BLTU A7, A5, LBB7_5
	WORD $0x40b608b3    // sub	a7, a2, a1
	BLTU A7, A5, LBB7_5
	WORD $0x00185813    // srli	a6, a6, 1
	WORD $0x41000733    // neg	a4, a6
	WORD $0x00d77733    // and	a4, a4, a3
	WORD $0x0d1078d7    // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x00070893    // mv	a7, a4
	WORD $0x00060293    // mv	t0, a2
	WORD $0x00058313    // mv	t1, a1
	WORD $0x00050393    // mv	t2, a0

LBB7_12:
	WORD $0x2283e407    // vl2re32.v	v8, (t2)
	WORD $0x22836507    // vl2re32.v	v10, (t1)
	WORD $0x92851457    // vfmul.vv	v8, v8, v10
	WORD $0x22828427    // vs2r.v	v8, (t0)
	WORD $0x00f383b3    // add	t2, t2, a5
	WORD $0x00f30333    // add	t1, t1, a5
	WORD $0x410888b3    // sub	a7, a7, a6
	WORD $0x00f282b3    // add	t0, t0, a5
	BNEZ A7, LBB7_12
	BNE  A4, A3, LBB7_5
	JMP  LBB7_7

TEXT ·vdiv_to(SB), $0-32
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  c+16(FP), A2
	MOV  n+24(FP), A3
	BLEZ A3, LBB8_8
	WORD $0xc2202873    // csrr	a6, vlenb
	WORD $0x00185713    // srli	a4, a6, 1
	WORD $0x01000793    // li	a5, 16
	BLTU A5, A4, LBB8_3
	WORD $0x01000713    // li	a4, 16

LBB8_3:
	WORD $0xff010113    // addi	sp, sp, -16
	WORD $0x00113423    // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023    // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413    // addi	s0, sp, 16
	WORD $0xff017113    // andi	sp, sp, -16
	BGEU A3, A4, LBB8_9
	WORD $0x00000713    // li	a4, 0

LBB8_5:
	WORD $0x40e686b3 // sub	a3, a3, a4
	WORD $0x00271713 // slli	a4, a4, 2
	WORD $0x00e60633 // add	a2, a2, a4
	WORD $0x00e585b3 // add	a1, a1, a4
	WORD $0x00e50533 // add	a0, a0, a4

LBB8_6:
	WORD $0x00052787 // flw	fa5, 0(a0)
	WORD $0x0005a707 // flw	fa4, 0(a1)
	WORD $0x18e7f7d3 // fdiv.s	fa5, fa5, fa4
	WORD $0x00f62027 // fsw	fa5, 0(a2)
	WORD $0xfff68693 // addi	a3, a3, -1
	WORD $0x00460613 // addi	a2, a2, 4
	WORD $0x00458593 // addi	a1, a1, 4
	WORD $0x00450513 // addi	a0, a0, 4
	BNEZ A3, LBB8_6

LBB8_7:
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB8_8:
	RET

LBB8_9:
	WORD $0x00181793    // slli	a5, a6, 1
	WORD $0x40a608b3    // sub	a7, a2, a0
	WORD $0x00000713    // li	a4, 0
	BLTU A7, A5, LBB8_5
	WORD $0x40b608b3    // sub	a7, a2, a1
	BLTU A7, A5, LBB8_5
	WORD $0x00185813    // srli	a6, a6, 1
	WORD $0x41000733    // neg	a4, a6
	WORD $0x00d77733    // and	a4, a4, a3
	WORD $0x0d1078d7    // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x00070893    // mv	a7, a4
	WORD $0x00060293    // mv	t0, a2
	WORD $0x00058313    // mv	t1, a1
	WORD $0x00050393    // mv	t2, a0

LBB8_12:
	WORD $0x2283e407    // vl2re32.v	v8, (t2)
	WORD $0x22836507    // vl2re32.v	v10, (t1)
	WORD $0x82851457    // vfdiv.vv	v8, v8, v10
	WORD $0x22828427    // vs2r.v	v8, (t0)
	WORD $0x00f383b3    // add	t2, t2, a5
	WORD $0x00f30333    // add	t1, t1, a5
	WORD $0x410888b3    // sub	a7, a7, a6
	WORD $0x00f282b3    // add	t0, t0, a5
	BNEZ A7, LBB8_12
	BNE  A4, A3, LBB8_5
	JMP  LBB8_7

TEXT ·vsqrt_to(SB), $0-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	BLEZ A2, LBB9_4
	WORD $0xff010113  // addi	sp, sp, -16
	WORD $0x00113423  // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023  // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413  // addi	s0, sp, 16
	WORD $0xff017113  // andi	sp, sp, -16

LBB9_2:
	WORD $0x0d0676d7 // vsetvli	a3, a2, e32, m1, ta, ma
	WORD $0x02056407 // vle32.v	v8, (a0)
	WORD $0x4e801457 // vfsqrt.v	v8, v8
	WORD $0x0205e427 // vse32.v	v8, (a1)
	WORD $0x00269713 // slli	a4, a3, 2
	WORD $0x00e50533 // add	a0, a0, a4
	WORD $0x40d60633 // sub	a2, a2, a3
	WORD $0x00e585b3 // add	a1, a1, a4
	BGTZ A2, LBB9_2
	WORD $0xff040113 // addi	sp, s0, -16
	WORD $0x00813083 // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403 // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113 // addi	sp, sp, 16

LBB9_4:
	RET

TEXT ·vdot(SB), $8-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	WORD $0xff010113  // addi	sp, sp, -16
	WORD $0x00113423  // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023  // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413  // addi	s0, sp, 16
	WORD $0xff017113  // andi	sp, sp, -16
	WORD $0x0d0076d7  // vsetvli	a3, zero, e32, m1, ta, ma
	WORD $0x02d65733  // divu	a4, a2, a3
	WORD $0x0007079b  // sext.w	a5, a4
	WORD $0x5e003457  // vmv.v.i	v8, 0
	BLEZ A5, LBB10_3
	WORD $0x00000813  // li	a6, 0
	WORD $0x00269893  // slli	a7, a3, 2
	WORD $0x9e8034d7  // vmv1r.v	v9, v8

LBB10_2:
	WORD $0x02056507     // vle32.v	v10, (a0)
	WORD $0x0205e587     // vle32.v	v11, (a1)
	WORD $0xb2a594d7     // vfmacc.vv	v9, v11, v10
	WORD $0x0018081b     // addiw	a6, a6, 1
	WORD $0x01150533     // add	a0, a0, a7
	WORD $0x011585b3     // add	a1, a1, a7
	BLT  A6, A5, LBB10_2
	JMP  LBB10_4

LBB10_3:
	WORD $0x9e8034d7 // vmv1r.v	v9, v8

LBB10_4:
	WORD $0x02d706b3        // mul	a3, a4, a3
	WORD $0x40d60633        // sub	a2, a2, a3
	WORD $0x0e941457        // vfredosum.vs	v8, v9, v8
	WORD $0x0d067057        // vsetvli	zero, a2, e32, m1, ta, ma
	WORD $0x02056487        // vle32.v	v9, (a0)
	WORD $0x0205e507        // vle32.v	v10, (a1)
	WORD $0x929514d7        // vfmul.vv	v9, v9, v10
	WORD $0x0e941457        // vfredosum.vs	v8, v9, v8
	WORD $0x42801557        // vfmv.f.s	fa0, v8
	WORD $0xff040113        // addi	sp, s0, -16
	WORD $0x00813083        // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403        // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113        // addi	sp, sp, 16
	MOVF FA0, result+24(FP)
	RET

TEXT ·veuclidean(SB), $8-24
	MOV  a+0(FP), A0
	MOV  b+8(FP), A1
	MOV  n+16(FP), A2
	WORD $0xff010113  // addi	sp, sp, -16
	WORD $0x00113423  // sd	ra, 8(sp)                       # 8-byte Folded Spill
	WORD $0x00813023  // sd	s0, 0(sp)                       # 8-byte Folded Spill
	WORD $0x01010413  // addi	s0, sp, 16
	WORD $0xff017113  // andi	sp, sp, -16
	WORD $0x0d0076d7  // vsetvli	a3, zero, e32, m1, ta, ma
	WORD $0x02d65733  // divu	a4, a2, a3
	WORD $0x0007079b  // sext.w	a5, a4
	WORD $0x5e003457  // vmv.v.i	v8, 0
	BLEZ A5, LBB11_3
	WORD $0x00000813  // li	a6, 0
	WORD $0x00269893  // slli	a7, a3, 2
	WORD $0x9e8034d7  // vmv1r.v	v9, v8

LBB11_2:
	WORD $0x02056507     // vle32.v	v10, (a0)
	WORD $0x0205e587     // vle32.v	v11, (a1)
	WORD $0x0aa59557     // vfsub.vv	v10, v10, v11
	WORD $0xb2a514d7     // vfmacc.vv	v9, v10, v10
	WORD $0x0018081b     // addiw	a6, a6, 1
	WORD $0x01150533     // add	a0, a0, a7
	WORD $0x011585b3     // add	a1, a1, a7
	BLT  A6, A5, LBB11_2
	JMP  LBB11_4

LBB11_3:
	WORD $0x9e8034d7 // vmv1r.v	v9, v8

LBB11_4:
	WORD $0x02d706b3        // mul	a3, a4, a3
	WORD $0x40d60633        // sub	a2, a2, a3
	WORD $0x0e941457        // vfredosum.vs	v8, v9, v8
	WORD $0x0d067657        // vsetvli	a2, a2, e32, m1, ta, ma
	WORD $0x02056487        // vle32.v	v9, (a0)
	WORD $0x0205e507        // vle32.v	v10, (a1)
	WORD $0x0d007557        // vsetvli	a0, zero, e32, m1, ta, ma
	WORD $0x0a9514d7        // vfsub.vv	v9, v9, v10
	WORD $0x0d067057        // vsetvli	zero, a2, e32, m1, ta, ma
	WORD $0x929494d7        // vfmul.vv	v9, v9, v9
	WORD $0x0e941457        // vfredosum.vs	v8, v9, v8
	WORD $0x4e801457        // vfsqrt.v	v8, v8
	WORD $0x42801557        // vfmv.f.s	fa0, v8
	WORD $0xff040113        // addi	sp, s0, -16
	WORD $0x00813083        // ld	ra, 8(sp)                       # 8-byte Folded Reload
	WORD $0x00013403        // ld	s0, 0(sp)                       # 8-byte Folded Reload
	WORD $0x01010113        // addi	sp, sp, 16
	MOVF FA0, result+24(FP)
	RET

TEXT ·vmm(SB), $0-88
	MOVB transA+0(FP), A0
	MOVB transB+1(FP), A1
	MOV  m+8(FP), A2
	MOV  n+16(FP), A3
	MOV  k+24(FP), A4
	MOV  a+32(FP), A5
	MOV  lda+40(FP), A6
	MOV  b+48(FP), A7
	ADDI -24, SP, SP
	MOV  ldb+80(FP), T0
	MOV  T0, 0(SP)
	MOV  c+88(FP), T0
	MOV  T0, 8(SP)
	MOV  ldc+96(FP), T0
	MOV  T0, 16(SP)
	WORD $0xf8010113      // addi	sp, sp, -128
	WORD $0x06113c23      // sd	ra, 120(sp)                     # 8-byte Folded Spill
	WORD $0x06813823      // sd	s0, 112(sp)                     # 8-byte Folded Spill
	WORD $0x07213423      // sd	s2, 104(sp)                     # 8-byte Folded Spill
	WORD $0x07313023      // sd	s3, 96(sp)                      # 8-byte Folded Spill
	WORD $0x05413c23      // sd	s4, 88(sp)                      # 8-byte Folded Spill
	WORD $0x05513823      // sd	s5, 80(sp)                      # 8-byte Folded Spill
	WORD $0x05613423      // sd	s6, 72(sp)                      # 8-byte Folded Spill
	WORD $0x05713023      // sd	s7, 64(sp)                      # 8-byte Folded Spill
	WORD $0x03813c23      // sd	s8, 56(sp)                      # 8-byte Folded Spill
	WORD $0x03913823      // sd	s9, 48(sp)                      # 8-byte Folded Spill
	WORD $0x03a13423      // sd	s10, 40(sp)                     # 8-byte Folded Spill
	WORD $0x08010413      // addi	s0, sp, 128
	WORD $0xff017113      // andi	sp, sp, -16
	WORD $0x01043303      // ld	t1, 16(s0)
	WORD $0x00843283      // ld	t0, 8(s0)
	WORD $0x02513023      // sd	t0, 32(sp)                      # 8-byte Folded Spill
	WORD $0x00043383      // ld	t2, 0(s0)
	WORD $0x01113823      // sd	a7, 16(sp)                      # 8-byte Folded Spill
	WORD $0x00c13c23      // sd	a2, 24(sp)                      # 8-byte Folded Spill
	BNEZ A0, LBB12_18
	BNEZ A1, LBB12_18
	WORD $0x01813503      // ld	a0, 24(sp)                      # 8-byte Folded Reload
	BLEZ A0, LBB12_65
	BLEZ A4, LBB12_65
	BLEZ A3, LBB12_65
	WORD $0x00269f13      // slli	t5, a3, 2
	WORD $0x00271f93      // slli	t6, a4, 2
	WORD $0xfff70513      // addi	a0, a4, -1
	WORD $0x02750533      // mul	a0, a0, t2
	WORD $0x00d50eb3      // add	t4, a0, a3
	WORD $0xc2202973      // csrr	s2, vlenb
	WORD $0x00195513      // srli	a0, s2, 1
	WORD $0x00800593      // li	a1, 8
	WORD $0x002e9e93      // slli	t4, t4, 2
	WORD $0x00050a13      // mv	s4, a0
	BLTU A1, A0, LBB12_7
	WORD $0x00800a13      // li	s4, 8

LBB12_7:
	WORD $0x00000593 // li	a1, 0
	WORD $0x00231293 // slli	t0, t1, 2
	WORD $0x00281613 // slli	a2, a6, 2
	WORD $0x01013883 // ld	a7, 16(sp)                      # 8-byte Folded Reload
	WORD $0x01d88eb3 // add	t4, a7, t4
	WORD $0x02013303 // ld	t1, 32(sp)                      # 8-byte Folded Reload
	WORD $0x01e30f33 // add	t5, t1, t5
	WORD $0x01f78fb3 // add	t6, a5, t6
	WORD $0x00100893 // li	a7, 1
	WORD $0x03d89893 // slli	a7, a7, 61
	WORD $0x0113f8b3 // and	a7, t2, a7
	WORD $0x00239e13 // slli	t3, t2, 2
	WORD $0x00191913 // slli	s2, s2, 1
	WORD $0x011039b3 // snez	s3, a7
	WORD $0x0146ba33 // sltu	s4, a3, s4
	JMP  LBB12_9

LBB12_8:
	WORD $0x00158593      // addi	a1, a1, 1
	WORD $0x00530333      // add	t1, t1, t0
	WORD $0x01813883      // ld	a7, 24(sp)                      # 8-byte Folded Reload
	BEQ  A1, A7, LBB12_65

LBB12_9:
	WORD $0x00000b13 // li	s6, 0
	WORD $0x02b288b3 // mul	a7, t0, a1
	WORD $0x02013383 // ld	t2, 32(sp)                      # 8-byte Folded Reload
	WORD $0x011383b3 // add	t2, t2, a7
	WORD $0x011f08b3 // add	a7, t5, a7
	WORD $0x02b60ab3 // mul	s5, a2, a1
	WORD $0x01578bb3 // add	s7, a5, s5
	WORD $0x015f8ab3 // add	s5, t6, s5
	WORD $0x0153bab3 // sltu	s5, t2, s5
	WORD $0x011bbbb3 // sltu	s7, s7, a7
	WORD $0x017afab3 // and	s5, s5, s7
	WORD $0x03058bb3 // mul	s7, a1, a6
	WORD $0x002b9b93 // slli	s7, s7, 2
	WORD $0x01778bb3 // add	s7, a5, s7
	WORD $0x01d3b3b3 // sltu	t2, t2, t4
	WORD $0x01013c83 // ld	s9, 16(sp)                      # 8-byte Folded Reload
	WORD $0x011cb8b3 // sltu	a7, s9, a7
	WORD $0x0113f8b3 // and	a7, t2, a7
	WORD $0x0138e8b3 // or	a7, a7, s3
	WORD $0x015a63b3 // or	t2, s4, s5
	WORD $0x0113ec33 // or	s8, t2, a7
	WORD $0x000c8393 // mv	t2, s9
	JMP  LBB12_11

LBB12_10:
	WORD $0x001b0b13     // addi	s6, s6, 1
	WORD $0x01c383b3     // add	t2, t2, t3
	BEQ  S6, A4, LBB12_8

LBB12_11:
	WORD $0x002b1d13  // slli	s10, s6, 2
	WORD $0x01ab8d33  // add	s10, s7, s10
	BEQZ S8, LBB12_13
	WORD $0x00000093  // li	ra, 0
	JMP  LBB12_16

LBB12_13:
	WORD $0x0d1078d7 // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x0a0d6407 // vlse32.v	v8, (s10), zero
	WORD $0x40a008b3 // neg	a7, a0
	WORD $0x00d8f0b3 // and	ra, a7, a3
	WORD $0x00008a93 // mv	s5, ra
	WORD $0x00030c93 // mv	s9, t1
	WORD $0x00038893 // mv	a7, t2

LBB12_14:
	WORD $0x2288e507      // vl2re32.v	v10, (a7)
	WORD $0x228ce607      // vl2re32.v	v12, (s9)
	WORD $0xb2a41657      // vfmacc.vv	v12, v8, v10
	WORD $0x228c8627      // vs2r.v	v12, (s9)
	WORD $0x012888b3      // add	a7, a7, s2
	WORD $0x40aa8ab3      // sub	s5, s5, a0
	WORD $0x012c8cb3      // add	s9, s9, s2
	BNEZ S5, LBB12_14
	BEQ  RA, A3, LBB12_10

LBB12_16:
	WORD $0x00209a93 // slli	s5, ra, 2
	WORD $0x01538cb3 // add	s9, t2, s5
	WORD $0x01530ab3 // add	s5, t1, s5
	WORD $0x401680b3 // sub	ra, a3, ra

LBB12_17:
	WORD $0x000d2787  // flw	fa5, 0(s10)
	WORD $0x000ca707  // flw	fa4, 0(s9)
	WORD $0x000aa687  // flw	fa3, 0(s5)
	WORD $0x68e7f7c3  // fmadd.s	fa5, fa5, fa4, fa3
	WORD $0x00faa027  // fsw	fa5, 0(s5)
	WORD $0x004c8c93  // addi	s9, s9, 4
	WORD $0xfff08093  // addi	ra, ra, -1
	WORD $0x004a8a93  // addi	s5, s5, 4
	BNEZ RA, LBB12_17
	JMP  LBB12_10

LBB12_18:
	BEQZ A1, LBB12_29
	BNEZ A0, LBB12_29
	WORD $0x01813503  // ld	a0, 24(sp)                      # 8-byte Folded Reload
	BLEZ A0, LBB12_65
	BLEZ A3, LBB12_65
	WORD $0x0d007e57  // vsetvli	t3, zero, e32, m1, ta, ma
	WORD $0x03c75533  // divu	a0, a4, t3
	WORD $0x0005059b  // sext.w	a1, a0
	WORD $0x5e003457  // vmv.v.i	v8, 0
	WORD $0x03c50533  // mul	a0, a0, t3
	WORD $0x40a70733  // sub	a4, a4, a0
	WORD $0x0d077557  // vsetvli	a0, a4, e32, m1, ta, ma
	BLEZ A1, LBB12_61
	WORD $0x00000713  // li	a4, 0
	WORD $0x00281813  // slli	a6, a6, 2
	WORD $0x002e1e13  // slli	t3, t3, 2
	WORD $0x00239393  // slli	t2, t2, 2

LBB12_24:
	WORD $0x00000e93 // li	t4, 0
	WORD $0x02670633 // mul	a2, a4, t1
	WORD $0x00261613 // slli	a2, a2, 2
	WORD $0x02013f03 // ld	t5, 32(sp)                      # 8-byte Folded Reload
	WORD $0x00cf0f33 // add	t5, t5, a2
	WORD $0x01013f83 // ld	t6, 16(sp)                      # 8-byte Folded Reload

LBB12_25:
	WORD $0x00000293 // li	t0, 0
	WORD $0x0d007657 // vsetvli	a2, zero, e32, m1, ta, ma
	WORD $0x000f8913 // mv	s2, t6
	WORD $0x00078893 // mv	a7, a5
	WORD $0x9e8034d7 // vmv1r.v	v9, v8

LBB12_26:
	WORD $0x0208e507      // vle32.v	v10, (a7)
	WORD $0x02096587      // vle32.v	v11, (s2)
	WORD $0xb2a594d7      // vfmacc.vv	v9, v11, v10
	WORD $0x0012829b      // addiw	t0, t0, 1
	WORD $0x01c888b3      // add	a7, a7, t3
	WORD $0x01c90933      // add	s2, s2, t3
	BLT  T0, A1, LBB12_26
	WORD $0x0e9414d7      // vfredosum.vs	v9, v9, v8
	WORD $0x0d057057      // vsetvli	zero, a0, e32, m1, ta, ma
	WORD $0x0208e507      // vle32.v	v10, (a7)
	WORD $0x02096587      // vle32.v	v11, (s2)
	WORD $0x92a59557      // vfmul.vv	v10, v10, v11
	WORD $0x0ea494d7      // vfredosum.vs	v9, v10, v9
	WORD $0x002e9613      // slli	a2, t4, 2
	WORD $0x00cf0633      // add	a2, t5, a2
	WORD $0xcd00f057      // vsetivli	zero, 1, e32, m1, ta, ma
	WORD $0x020664a7      // vse32.v	v9, (a2)
	WORD $0x001e8e93      // addi	t4, t4, 1
	WORD $0x007f8fb3      // add	t6, t6, t2
	BNE  T4, A3, LBB12_25
	WORD $0x00170713      // addi	a4, a4, 1
	WORD $0x010787b3      // add	a5, a5, a6
	WORD $0x01813603      // ld	a2, 24(sp)                      # 8-byte Folded Reload
	BNE  A4, A2, LBB12_24
	JMP  LBB12_65

LBB12_29:
	WORD $0x00e02633      // sgtz	a2, a4
	WORD $0x00d028b3      // sgtz	a7, a3
	WORD $0x01167633      // and	a2, a2, a7
	BEQZ A0, LBB12_45
	BNEZ A1, LBB12_45
	WORD $0x01813503      // ld	a0, 24(sp)                      # 8-byte Folded Reload
	WORD $0x00a02533      // sgtz	a0, a0
	WORD $0x00c57533      // and	a0, a0, a2
	BEQZ A0, LBB12_65
	WORD $0x00269f13      // slli	t5, a3, 2
	WORD $0xfff70513      // addi	a0, a4, -1
	WORD $0x030505b3      // mul	a1, a0, a6
	WORD $0x00259f93      // slli	t6, a1, 2
	WORD $0x02750533      // mul	a0, a0, t2
	WORD $0x00d50533      // add	a0, a0, a3
	WORD $0x00251e93      // slli	t4, a0, 2
	WORD $0xc2202573      // csrr	a0, vlenb
	WORD $0x00155593      // srli	a1, a0, 1
	WORD $0x00800613      // li	a2, 8
	WORD $0x01f78fb3      // add	t6, a5, t6
	WORD $0x00058a93      // mv	s5, a1
	BLTU A2, A1, LBB12_34
	WORD $0x00800a93      // li	s5, 8

LBB12_34:
	WORD $0x00000e13 // li	t3, 0
	WORD $0x00231313 // slli	t1, t1, 2
	WORD $0x01013603 // ld	a2, 16(sp)                      # 8-byte Folded Reload
	WORD $0x01d60633 // add	a2, a2, t4
	WORD $0x00c13423 // sd	a2, 8(sp)                       # 8-byte Folded Spill
	WORD $0x02013b03 // ld	s6, 32(sp)                      # 8-byte Folded Reload
	WORD $0x01eb0f33 // add	t5, s6, t5
	WORD $0x004f8f93 // addi	t6, t6, 4
	WORD $0x00100613 // li	a2, 1
	WORD $0x03d61613 // slli	a2, a2, 61
	WORD $0x00c878b3 // and	a7, a6, a2
	WORD $0x00c3f633 // and	a2, t2, a2
	WORD $0x00239393 // slli	t2, t2, 2
	WORD $0x00151913 // slli	s2, a0, 1
	WORD $0x00c039b3 // snez	s3, a2
	WORD $0x01103a33 // snez	s4, a7
	WORD $0x0156bab3 // sltu	s5, a3, s5
	JMP  LBB12_36

LBB12_35:
	WORD $0x001e0e13      // addi	t3, t3, 1
	WORD $0x006b0b33      // add	s6, s6, t1
	WORD $0x01813603      // ld	a2, 24(sp)                      # 8-byte Folded Reload
	BEQ  T3, A2, LBB12_65

LBB12_36:
	WORD $0x00000b93 // li	s7, 0
	WORD $0x03c30633 // mul	a2, t1, t3
	WORD $0x02013883 // ld	a7, 32(sp)                      # 8-byte Folded Reload
	WORD $0x00c888b3 // add	a7, a7, a2
	WORD $0x00cf0633 // add	a2, t5, a2
	WORD $0x002e1293 // slli	t0, t3, 2
	WORD $0x00578c33 // add	s8, a5, t0
	WORD $0x005f82b3 // add	t0, t6, t0
	WORD $0x0058b2b3 // sltu	t0, a7, t0
	WORD $0x00cc3eb3 // sltu	t4, s8, a2
	WORD $0x01d2f2b3 // and	t0, t0, t4
	WORD $0x0142e2b3 // or	t0, t0, s4
	WORD $0x00813e83 // ld	t4, 8(sp)                       # 8-byte Folded Reload
	WORD $0x01d8b8b3 // sltu	a7, a7, t4
	WORD $0x01013d03 // ld	s10, 16(sp)                     # 8-byte Folded Reload
	WORD $0x00cd3633 // sltu	a2, s10, a2
	WORD $0x00c8f633 // and	a2, a7, a2
	WORD $0x01366633 // or	a2, a2, s3
	WORD $0x00c2e633 // or	a2, t0, a2
	WORD $0x00caecb3 // or	s9, s5, a2
	JMP  LBB12_38

LBB12_37:
	WORD $0x001b8b93      // addi	s7, s7, 1
	WORD $0x007d0d33      // add	s10, s10, t2
	BEQ  S7, A4, LBB12_35

LBB12_38:
	WORD $0x030b8633  // mul	a2, s7, a6
	WORD $0x00261613  // slli	a2, a2, 2
	WORD $0x00cc00b3  // add	ra, s8, a2
	BEQZ S9, LBB12_40
	WORD $0x00000e93  // li	t4, 0
	JMP  LBB12_43

LBB12_40:
	WORD $0x00155613 // srli	a2, a0, 1
	WORD $0x0d1078d7 // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x0a00e407 // vlse32.v	v8, (ra), zero
	WORD $0x40c00633 // neg	a2, a2
	WORD $0x00d67eb3 // and	t4, a2, a3
	WORD $0x000e8893 // mv	a7, t4
	WORD $0x000b0293 // mv	t0, s6
	WORD $0x000d0613 // mv	a2, s10

LBB12_41:
	WORD $0x22866507      // vl2re32.v	v10, (a2)
	WORD $0x2282e607      // vl2re32.v	v12, (t0)
	WORD $0xb2a41657      // vfmacc.vv	v12, v8, v10
	WORD $0x22828627      // vs2r.v	v12, (t0)
	WORD $0x01260633      // add	a2, a2, s2
	WORD $0x40b888b3      // sub	a7, a7, a1
	WORD $0x012282b3      // add	t0, t0, s2
	BNEZ A7, LBB12_41
	BEQ  T4, A3, LBB12_37

LBB12_43:
	WORD $0x002e9293 // slli	t0, t4, 2
	WORD $0x005d08b3 // add	a7, s10, t0
	WORD $0x005b02b3 // add	t0, s6, t0
	WORD $0x41d68eb3 // sub	t4, a3, t4

LBB12_44:
	WORD $0x0000a787  // flw	fa5, 0(ra)
	WORD $0x0008a707  // flw	fa4, 0(a7)
	WORD $0x0002a687  // flw	fa3, 0(t0)
	WORD $0x68e7f7c3  // fmadd.s	fa5, fa5, fa4, fa3
	WORD $0x00f2a027  // fsw	fa5, 0(t0)
	WORD $0x00488893  // addi	a7, a7, 4
	WORD $0xfffe8e93  // addi	t4, t4, -1
	WORD $0x00428293  // addi	t0, t0, 4
	BNEZ T4, LBB12_44
	JMP  LBB12_37

LBB12_45:
	WORD $0x00b675b3      // and	a1, a2, a1
	BEQZ A1, LBB12_65
	WORD $0x01813583      // ld	a1, 24(sp)                      # 8-byte Folded Reload
	BLEZ A1, LBB12_65
	BEQZ A0, LBB12_65
	WORD $0x00269f13      // slli	t5, a3, 2
	WORD $0xfff70513      // addi	a0, a4, -1
	WORD $0x03050533      // mul	a0, a0, a6
	WORD $0x00251f93      // slli	t6, a0, 2
	WORD $0x00d70533      // add	a0, a4, a3
	WORD $0x00251513      // slli	a0, a0, 2
	WORD $0x01013e83      // ld	t4, 16(sp)                      # 8-byte Folded Reload
	WORD $0x00ae8eb3      // add	t4, t4, a0
	WORD $0xc2202573      // csrr	a0, vlenb
	WORD $0x00155593      // srli	a1, a0, 1
	WORD $0x00800613      // li	a2, 8
	WORD $0x01f78fb3      // add	t6, a5, t6
	WORD $0x00058913      // mv	s2, a1
	BLTU A2, A1, LBB12_50
	WORD $0x00800913      // li	s2, 8

LBB12_50:
	WORD $0x00000e13 // li	t3, 0
	WORD $0x00231313 // slli	t1, t1, 2
	WORD $0xffce8e93 // addi	t4, t4, -4
	WORD $0x01d13423 // sd	t4, 8(sp)                       # 8-byte Folded Spill
	WORD $0x02013a83 // ld	s5, 32(sp)                      # 8-byte Folded Reload
	WORD $0x01ea8f33 // add	t5, s5, t5
	WORD $0x004f8f93 // addi	t6, t6, 4
	WORD $0x0126b633 // sltu	a2, a3, s2
	WORD $0xfff64613 // not	a2, a2
	WORD $0xfff38893 // addi	a7, t2, -1
	WORD $0x0018b893 // seqz	a7, a7
	WORD $0x01167633 // and	a2, a2, a7
	WORD $0x00100893 // li	a7, 1
	WORD $0x03d89893 // slli	a7, a7, 61
	WORD $0x011878b3 // and	a7, a6, a7
	WORD $0x00151913 // slli	s2, a0, 1
	WORD $0x00239e93 // slli	t4, t2, 2
	WORD $0x011039b3 // snez	s3, a7
	WORD $0x00164a13 // xori	s4, a2, 1
	JMP  LBB12_52

LBB12_51:
	WORD $0x001e0e13      // addi	t3, t3, 1
	WORD $0x006a8ab3      // add	s5, s5, t1
	WORD $0x01813603      // ld	a2, 24(sp)                      # 8-byte Folded Reload
	BEQ  T3, A2, LBB12_65

LBB12_52:
	WORD $0x00000b13 // li	s6, 0
	WORD $0x03c30633 // mul	a2, t1, t3
	WORD $0x02013883 // ld	a7, 32(sp)                      # 8-byte Folded Reload
	WORD $0x00c888b3 // add	a7, a7, a2
	WORD $0x00cf0633 // add	a2, t5, a2
	WORD $0x002e1293 // slli	t0, t3, 2
	WORD $0x00578bb3 // add	s7, a5, t0
	WORD $0x005f82b3 // add	t0, t6, t0
	WORD $0x0058b2b3 // sltu	t0, a7, t0
	WORD $0x00cbb3b3 // sltu	t2, s7, a2
	WORD $0x0072f2b3 // and	t0, t0, t2
	WORD $0x0132e2b3 // or	t0, t0, s3
	WORD $0x00813383 // ld	t2, 8(sp)                       # 8-byte Folded Reload
	WORD $0x0078b8b3 // sltu	a7, a7, t2
	WORD $0x01013c83 // ld	s9, 16(sp)                      # 8-byte Folded Reload
	WORD $0x00ccb633 // sltu	a2, s9, a2
	WORD $0x00c8f633 // and	a2, a7, a2
	WORD $0x00ca6633 // or	a2, s4, a2
	WORD $0x00566c33 // or	s8, a2, t0
	JMP  LBB12_54

LBB12_53:
	WORD $0x001b0b13      // addi	s6, s6, 1
	WORD $0x004c8c93      // addi	s9, s9, 4
	BEQ  S6, A4, LBB12_51

LBB12_54:
	WORD $0x030b0633  // mul	a2, s6, a6
	WORD $0x00261613  // slli	a2, a2, 2
	WORD $0x00cb8d33  // add	s10, s7, a2
	BEQZ S8, LBB12_56
	WORD $0x00000093  // li	ra, 0
	JMP  LBB12_59

LBB12_56:
	WORD $0x00155613 // srli	a2, a0, 1
	WORD $0x0d1078d7 // vsetvli	a7, zero, e32, m2, ta, ma
	WORD $0x0a0d6407 // vlse32.v	v8, (s10), zero
	WORD $0x40c00633 // neg	a2, a2
	WORD $0x00d670b3 // and	ra, a2, a3
	WORD $0x00008893 // mv	a7, ra
	WORD $0x000a8293 // mv	t0, s5
	WORD $0x000c8613 // mv	a2, s9

LBB12_57:
	WORD $0x22866507      // vl2re32.v	v10, (a2)
	WORD $0x2282e607      // vl2re32.v	v12, (t0)
	WORD $0xb2a41657      // vfmacc.vv	v12, v8, v10
	WORD $0x22828627      // vs2r.v	v12, (t0)
	WORD $0x01260633      // add	a2, a2, s2
	WORD $0x40b888b3      // sub	a7, a7, a1
	WORD $0x012282b3      // add	t0, t0, s2
	BNEZ A7, LBB12_57
	BEQ  RA, A3, LBB12_53

LBB12_59:
	WORD $0x021e83b3 // mul	t2, t4, ra
	WORD $0x007c83b3 // add	t2, s9, t2
	WORD $0x00209893 // slli	a7, ra, 2
	WORD $0x011a88b3 // add	a7, s5, a7
	WORD $0x401682b3 // sub	t0, a3, ra

LBB12_60:
	WORD $0x000d2787  // flw	fa5, 0(s10)
	WORD $0x0003a707  // flw	fa4, 0(t2)
	WORD $0x0008a687  // flw	fa3, 0(a7)
	WORD $0x68e7f7c3  // fmadd.s	fa5, fa5, fa4, fa3
	WORD $0x00f8a027  // fsw	fa5, 0(a7)
	WORD $0x01d383b3  // add	t2, t2, t4
	WORD $0xfff28293  // addi	t0, t0, -1
	WORD $0x00488893  // addi	a7, a7, 4
	BNEZ T0, LBB12_60
	JMP  LBB12_53

LBB12_61:
	WORD $0x00000593 // li	a1, 0
	WORD $0x0d007657 // vsetvli	a2, zero, e32, m1, ta, ma
	WORD $0x0e841457 // vfredosum.vs	v8, v8, v8
	WORD $0x00239393 // slli	t2, t2, 2
	WORD $0x00231313 // slli	t1, t1, 2

LBB12_62:
	WORD $0x03058633 // mul	a2, a1, a6
	WORD $0x00261613 // slli	a2, a2, 2
	WORD $0x00c78733 // add	a4, a5, a2
	WORD $0x00068893 // mv	a7, a3
	WORD $0x02013283 // ld	t0, 32(sp)                      # 8-byte Folded Reload
	WORD $0x01013e03 // ld	t3, 16(sp)                      # 8-byte Folded Reload

LBB12_63:
	WORD $0x0d057057      // vsetvli	zero, a0, e32, m1, ta, ma
	WORD $0x02076487      // vle32.v	v9, (a4)
	WORD $0x020e6507      // vle32.v	v10, (t3)
	WORD $0x929514d7      // vfmul.vv	v9, v9, v10
	WORD $0x0e9414d7      // vfredosum.vs	v9, v9, v8
	WORD $0xcd00f057      // vsetivli	zero, 1, e32, m1, ta, ma
	WORD $0x0202e4a7      // vse32.v	v9, (t0)
	WORD $0x007e0e33      // add	t3, t3, t2
	WORD $0xfff88893      // addi	a7, a7, -1
	WORD $0x00428293      // addi	t0, t0, 4
	BNEZ A7, LBB12_63
	WORD $0x00158593      // addi	a1, a1, 1
	WORD $0x02013603      // ld	a2, 32(sp)                      # 8-byte Folded Reload
	WORD $0x00660633      // add	a2, a2, t1
	WORD $0x02c13023      // sd	a2, 32(sp)                      # 8-byte Folded Spill
	WORD $0x01813603      // ld	a2, 24(sp)                      # 8-byte Folded Reload
	BNE  A1, A2, LBB12_62

LBB12_65:
	WORD $0xf8040113 // addi	sp, s0, -128
	WORD $0x07813083 // ld	ra, 120(sp)                     # 8-byte Folded Reload
	WORD $0x07013403 // ld	s0, 112(sp)                     # 8-byte Folded Reload
	WORD $0x06813903 // ld	s2, 104(sp)                     # 8-byte Folded Reload
	WORD $0x06013983 // ld	s3, 96(sp)                      # 8-byte Folded Reload
	WORD $0x05813a03 // ld	s4, 88(sp)                      # 8-byte Folded Reload
	WORD $0x05013a83 // ld	s5, 80(sp)                      # 8-byte Folded Reload
	WORD $0x04813b03 // ld	s6, 72(sp)                      # 8-byte Folded Reload
	WORD $0x04013b83 // ld	s7, 64(sp)                      # 8-byte Folded Reload
	WORD $0x03813c03 // ld	s8, 56(sp)                      # 8-byte Folded Reload
	WORD $0x03013c83 // ld	s9, 48(sp)                      # 8-byte Folded Reload
	WORD $0x02813d03 // ld	s10, 40(sp)                     # 8-byte Folded Reload
	WORD $0x08010113 // addi	sp, sp, 128
	ADDI 24, SP, SP
	RET
