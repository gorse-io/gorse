name: build

on:
  push:
    branches:    
      - master

jobs:
  windows_images:
    name: windows images
    runs-on: windows-latest
    strategy:
      matrix:
        image: [gorse-master, gorse-server, gorse-worker, gorse-in-one]
    steps:
      - name: Pull source
        uses: actions/checkout@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build -f cmd/${{ matrix.image }}/Dockerfile.windows `
            -t zhenghaoz/${{ matrix.image }}:nightly-windowsservercore .
          docker image push --all-tags zhenghaoz/${{ matrix.image }}

  docker_images:
    name: docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets: [default, cuda, mkl]
    steps:
      # - name: Free Disk Space (Ubuntu)
      #   if: matrix.targets == 'cuda'
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     # this might remove tools that are actually needed,
      #     # if set to "true" but frees about 6 GB
      #     tool-cache: false
          
      #     # all of these default to true, but feel free to set to
      #     # "false" if necessary for your workflow
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: false
      #     docker-images: false
      #     swap-storage: false

      - name: Pull source
        uses: actions/checkout@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        uses: docker/bake-action@v2
        with:
          files: docker-bake.hcl
          targets: ${{ matrix.targets }}
          push: true
